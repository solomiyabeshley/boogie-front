[{"D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\index.js":"1","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\App.js":"2","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\components\\AppRouter.js":"3","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\components\\NavBar.js":"4","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\http\\userAPI.js":"5","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\routes.js":"6","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\utils\\consts.js":"7","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\pages\\Auth.js":"8","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\http\\index.js":"9","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\pages\\Admin.js":"10","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\pages\\Main.js":"11","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\pages\\DevicePage.js":"12","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\pages\\Shop.js":"13","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\http\\deviceAPI.js":"14","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\components\\Pages.js":"15","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\pages\\Basket.js":"16","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\components\\BrandBar.js":"17","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\components\\modals\\CreateBrand.js":"18","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\components\\modals\\CreateType.js":"19","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\components\\modals\\CreateDevice.js":"20","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\components\\TypeBar.js":"21","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\components\\DeviceList.js":"22","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\components\\DeviceItem.js":"23","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\store\\DeviceStore.js":"24","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\store\\UserStore.js":"25","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\components\\SvgButton.js":"26","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\components\\footer.js":"27"},{"size":486,"mtime":1645654862344,"results":"28","hashOfConfig":"29"},{"size":981,"mtime":1645649946512,"results":"30","hashOfConfig":"29"},{"size":818,"mtime":1638489665310,"results":"31","hashOfConfig":"29"},{"size":3244,"mtime":1646572983982,"results":"32","hashOfConfig":"29"},{"size":1091,"mtime":1646579412517,"results":"33","hashOfConfig":"29"},{"size":958,"mtime":1638490374999,"results":"34","hashOfConfig":"29"},{"size":303,"mtime":1645650279777,"results":"35","hashOfConfig":"29"},{"size":4774,"mtime":1646574825823,"results":"36","hashOfConfig":"29"},{"size":426,"mtime":1636472339153,"results":"37","hashOfConfig":"29"},{"size":6493,"mtime":1646580933811,"results":"38","hashOfConfig":"29"},{"size":337,"mtime":1646581032352,"results":"39","hashOfConfig":"29"},{"size":2277,"mtime":1638490007172,"results":"40","hashOfConfig":"29"},{"size":1584,"mtime":1637593307705,"results":"41","hashOfConfig":"29"},{"size":1032,"mtime":1637589331133,"results":"42","hashOfConfig":"29"},{"size":829,"mtime":1637593331624,"results":"43","hashOfConfig":"29"},{"size":155,"mtime":1637593345452,"results":"44","hashOfConfig":"29"},{"size":796,"mtime":1638492827959,"results":"45","hashOfConfig":"29"},{"size":1417,"mtime":1638492462752,"results":"46","hashOfConfig":"29"},{"size":1399,"mtime":1638492122339,"results":"47","hashOfConfig":"29"},{"size":6254,"mtime":1637593457602,"results":"48","hashOfConfig":"29"},{"size":812,"mtime":1638492813879,"results":"49","hashOfConfig":"29"},{"size":508,"mtime":1637593701964,"results":"50","hashOfConfig":"29"},{"size":1112,"mtime":1637593924606,"results":"51","hashOfConfig":"29"},{"size":1361,"mtime":1637594077774,"results":"52","hashOfConfig":"29"},{"size":773,"mtime":1645650409654,"results":"53","hashOfConfig":"29"},{"size":2829,"mtime":1640895537494,"results":"54","hashOfConfig":"29"},{"size":266,"mtime":1638484314642,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"pw8l2e",{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\index.js",[],["118","119"],"D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\App.js",["120","121"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\nimport Footer from \"./components/footer\";\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            console.log(data, \"DATA\")\n            user.setIsAuth(true)\n            user.setUserData(data?.userData)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n            {/*<Footer/>*/}\n        </BrowserRouter>\n    );\n});\n\nexport default App;","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\components\\AppRouter.js",[],"D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\components\\NavBar.js",[],"D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\http\\userAPI.js",[],"D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\routes.js",[],"D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\utils\\consts.js",[],"D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\pages\\Auth.js",["122","123","124","125","126","127"],"import React, {useContext, useState} from 'react';\r\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\r\nimport {LOGIN_ROUTE, MAIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\r\nimport {login, registration} from \"../http/userAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {Box, Button, Card, Container, FormControl, Input, InputLabel, Typography} from \"@mui/material\";\r\nimport SvgButton from \"../components/SvgButton\";\r\nimport Alert from '@mui/material/Alert';\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nconst Auth = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const isLogin = location.pathname === LOGIN_ROUTE\r\n    const [firstName, setFirstName] = useState('')\r\n    const [surname, setSurname] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const click = async () => {\r\n        try {\r\n            let data;\r\n            if (isLogin) {\r\n                data = await login(email, password);\r\n                console.log(data)\r\n                user.setUserData(data?.userData)\r\n\r\n            } else {\r\n                const data = await registration(email, password, firstName, surname);\r\n                user.setUserData(data?.userData)\r\n\r\n            }\r\n            user.setIsAuth(true)\r\n            history.push(MAIN_ROUTE)\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth-body-design\">\r\n            <Card sx={{width: '30vw', margin: 'auto', marginTop: '1vw', backgroundColor: \"#fafafa\"}}>\r\n\r\n                <Typography variant={'h4'} style={{textAlign: 'center', marginTop: '5%'}}>Вітаємо в Boogie!</Typography>\r\n                <Typography variant={'h5'}\r\n                            style={{\r\n                                textAlign: 'center',\r\n                                marginTop: '2%'\r\n                            }}>{isLogin ? 'Вхід' : \"Реєстрація\"}</Typography>\r\n                <Box sx={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    p: 1.6,\r\n                    m: 1,\r\n                    bgcolor: '#fafafa',\r\n                }}>\r\n                    {!isLogin && <FormControl sx={{margin: \"1% 7%\"}}><InputLabel htmlFor=\"name\">Ім'я</InputLabel>\r\n                        <Input id=\"name\" value={firstName} size=\"small\" onChange={e => setFirstName(e.target.value)}/>\r\n                    </FormControl>}\r\n\r\n                    {!isLogin &&\r\n                        <FormControl sx={{margin: \"1% 7%\"}}><InputLabel htmlFor=\"second_name\">Прізвище</InputLabel>\r\n                            <Input id=\"second_name\" size=\"small\" value={surname}\r\n                                   onChange={e => setSurname(e.target.value)}/>\r\n                        </FormControl>}\r\n\r\n                    <FormControl sx={{margin: \"1% 7%\"}}><InputLabel htmlFor=\"email\">Email</InputLabel>\r\n                        <Input id=\"email\" size=\"small\" type='email' value={email}\r\n                               onChange={e => setEmail(e.target.value)}/>\r\n                    </FormControl>\r\n\r\n                    <FormControl sx={{margin: \"1% 7%\"}}><InputLabel htmlFor=\"password\">Пароль</InputLabel>\r\n                        <Input id=\"password\" size=\"small\" type=\"password\" value={password}\r\n                               onChange={e => setPassword(e.target.value)}/>\r\n                    </FormControl>\r\n\r\n                    <div>\r\n                        {isLogin ?\r\n                            <div style={{margin: \"2% 7%\"}}>\r\n                                Все ще немає аккаунту? <NavLink to={REGISTRATION_ROUTE}>Зареєструйтесь!</NavLink>\r\n                            </div>\r\n                            :\r\n                            <div style={{margin: \"2% 7%\"}}>\r\n                                Вже зареєстровані? <NavLink to={LOGIN_ROUTE}>Увійдіть!</NavLink>\r\n                            </div>\r\n                        }\r\n                        <div style={{display: 'flex', justifyContent: 'center', marginTop: '4%'}}>\r\n                            <SvgButton\r\n                                value={isLogin ? 'Увійти' : 'Зареєструватися'}\r\n                                onClick={click}\r\n                            >\r\n                            </SvgButton>\r\n                        </div>\r\n                    </div>\r\n\r\n                </Box>\r\n            </Card>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Auth;","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\http\\index.js",[],"D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\pages\\Admin.js",["128","129"],"D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\pages\\Main.js",["130","131"],"D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\pages\\DevicePage.js",["132"],"import React, {useEffect, useState} from 'react';\r\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\r\nimport bigStar from '../img/bigStar.png'\r\nimport {useParams} from 'react-router-dom'\r\nimport {fetchOneDevice} from \"../http/deviceAPI\";\r\n\r\nconst DevicePage = () => {\r\n    const [device, setDevice] = useState({info: []})\r\n    const {id} = useParams()\r\n    useEffect(() => {\r\n        fetchOneDevice(id).then(data => setDevice(data))\r\n    }, [])\r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + device.img}/>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Row className=\"d-flex flex-column align-items-center\">\r\n                        <h2>{device.name}</h2>\r\n                        <div\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{background: `url(${bigStar}) no-repeat center center`, width:240, height: 240, backgroundSize: 'cover', fontSize:64}}\r\n                        >\r\n                            {device.rating}\r\n                        </div>\r\n                    </Row>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card\r\n                        className=\"d-flex flex-column align-items-center justify-content-around\"\r\n                        style={{width: 300, height: 300, fontSize: 32, border: '5px solid lightgray'}}\r\n                    >\r\n                        <h3>От: {device.price} руб.</h3>\r\n                        <Button variant={\"outline-dark\"}>Добавить в корзину</Button>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-column m-3\">\r\n                <h1>Характеристики</h1>\r\n                {device.info.map((info, index) =>\r\n                    <Row key={info.id} style={{background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10}}>\r\n                        {info.title}: {info.description}\r\n                    </Row>\r\n                )}\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default DevicePage;","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\pages\\Shop.js",["133","134"],"import React, {useContext, useEffect} from 'react';\r\nimport {Container} from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport TypeBar from \"../components/TypeBar\";\r\nimport BrandBar from \"../components/BrandBar\";\r\nimport DeviceList from \"../components/DeviceList\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\r\nimport Pages from \"../components/Pages\";\r\n\r\nconst Shop = observer(() => {\r\n    const {device} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n        fetchDevices(null, null, 1, 2).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 2).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [device.page, device.selectedType, device.selectedBrand,])\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-2\">\r\n                <Col md={3}>\r\n                    <TypeBar/>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <BrandBar/>\r\n                    <DeviceList/>\r\n                    <Pages/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Shop;","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\http\\deviceAPI.js",["135"],"import {$authHost, $host} from \"./index\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createType = async (type) => {\r\n    const {data} = await $authHost.post('api/type', type)\r\n    return data\r\n}\r\n\r\nexport const fetchTypes = async () => {\r\n    const {data} = await $host.get('api/type')\r\n    return data\r\n}\r\n\r\nexport const createBrand = async (brand) => {\r\n    const {data} = await $authHost.post('api/brand', brand)\r\n    return data\r\n}\r\n\r\nexport const fetchBrands = async () => {\r\n    const {data} = await $host.get('api/brand', )\r\n    return data\r\n}\r\n\r\nexport const createDevice = async (device) => {\r\n    const {data} = await $authHost.post('api/device', device)\r\n    return data\r\n}\r\n\r\nexport const fetchDevices = async (typeId, brandId, page, limit= 5) => {\r\n    const {data} = await $host.get('api/device', {params: {\r\n            typeId, brandId, page, limit\r\n        }})\r\n    return data\r\n}\r\n\r\nexport const fetchOneDevice = async (id) => {\r\n    const {data} = await $host.get('api/device/' + id)\r\n    return data\r\n}","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\components\\Pages.js",[],"D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\pages\\Basket.js",[],"D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\components\\BrandBar.js",[],"D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\components\\modals\\CreateBrand.js",["136"],"import React, {useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {createBrand, createType} from \"../../http/deviceAPI\";\r\n\r\nconst CreateBrand = ({show, onHide}) => {\r\n    const [value, setValue] = useState('')\r\n\r\n    const addBrand = () => {\r\n        createBrand({name: value}).then(data => {\r\n            setValue('')\r\n            onHide()\r\n        })\r\n    }\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить бренд\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Control\r\n                        value={value}\r\n                        onChange={e => setValue(e.target.value)}\r\n                        placeholder={\"Введите название типа\"}\r\n                    />\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default CreateBrand;","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\components\\modals\\CreateType.js",[],"D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\components\\modals\\CreateDevice.js",["137","138"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\r\nimport {Context} from \"../../index\";\r\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst CreateDevice = observer(({show, onHide}) => {\r\n    const {device} = useContext(Context)\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [file, setFile] = useState(null)\r\n    const [info, setInfo] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n    }, [])\r\n\r\n    const addInfo = () => {\r\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\r\n    }\r\n    const removeInfo = (number) => {\r\n        setInfo(info.filter(i => i.number !== number))\r\n    }\r\n    const changeInfo = (key, value, number) => {\r\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\r\n    }\r\n\r\n    const selectFile = e => {\r\n        setFile(e.target.files[0])\r\n    }\r\n\r\n    const addDevice = () => {\r\n        const formData = new FormData()\r\n        formData.append('name', name)\r\n        formData.append('price', `${price}`)\r\n        formData.append('img', file)\r\n        formData.append('brandId', device.selectedBrand.id)\r\n        formData.append('typeId', device.selectedType.id)\r\n        formData.append('info', JSON.stringify(info))\r\n        createDevice(formData).then(data => onHide())\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить устройство\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.types.map(type =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => device.setSelectedType(type)}\r\n                                    key={type.id}\r\n                                >\r\n                                    {type.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите тип\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.brands.map(brand =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => device.setSelectedBrand(brand)}\r\n                                    key={brand.id}\r\n                                >\r\n                                    {brand.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Form.Control\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите название устройства\"\r\n                    />\r\n                    <Form.Control\r\n                        value={price}\r\n                        onChange={e => setPrice(Number(e.target.value))}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите стоимость устройства\"\r\n                        type=\"number\"\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        type=\"file\"\r\n                        onChange={selectFile}\r\n                    />\r\n                    <hr/>\r\n                    <Button\r\n                        variant={\"outline-dark\"}\r\n                        onClick={addInfo}\r\n                    >\r\n                        Добавить новое свойство\r\n                    </Button>\r\n                    {info.map(i =>\r\n                        <Row className=\"mt-4\" key={i.number}>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.title}\r\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\r\n                                    placeholder=\"Введите название свойства\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.description}\r\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\r\n                                    placeholder=\"Введите описание свойства\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Button\r\n                                    onClick={() => removeInfo(i.number)}\r\n                                    variant={\"outline-danger\"}\r\n                                >\r\n                                    Удалить\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default CreateDevice;","D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\components\\TypeBar.js",[],"D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\components\\DeviceList.js",[],"D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\components\\DeviceItem.js",[],"D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\store\\DeviceStore.js",[],"D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\store\\UserStore.js",[],"D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\components\\SvgButton.js",[],"D:\\ДИПЛОМНА РОБОТА\\boogie_front\\boogie\\src\\components\\footer.js",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":9,"column":8,"nodeType":"145","messageId":"146","endLine":9,"endColumn":14},{"ruleId":"147","severity":1,"message":"148","line":21,"column":8,"nodeType":"149","endLine":21,"endColumn":10,"suggestions":"150"},{"ruleId":"143","severity":1,"message":"151","line":3,"column":54,"nodeType":"145","messageId":"146","endLine":3,"endColumn":64},{"ruleId":"143","severity":1,"message":"152","line":7,"column":14,"nodeType":"145","messageId":"146","endLine":7,"endColumn":20},{"ruleId":"143","severity":1,"message":"153","line":7,"column":28,"nodeType":"145","messageId":"146","endLine":7,"endColumn":37},{"ruleId":"143","severity":1,"message":"154","line":9,"column":8,"nodeType":"145","messageId":"146","endLine":9,"endColumn":13},{"ruleId":"143","severity":1,"message":"155","line":10,"column":8,"nodeType":"145","messageId":"146","endLine":10,"endColumn":18},{"ruleId":"143","severity":1,"message":"156","line":11,"column":8,"nodeType":"145","messageId":"146","endLine":11,"endColumn":13},{"ruleId":"143","severity":1,"message":"157","line":15,"column":19,"nodeType":"145","messageId":"146","endLine":15,"endColumn":24},{"ruleId":"143","severity":1,"message":"158","line":30,"column":11,"nodeType":"145","messageId":"146","endLine":30,"endColumn":18},{"ruleId":"159","severity":2,"message":"160","line":10,"column":32,"nodeType":"145","messageId":"161","endLine":10,"endColumn":40},{"ruleId":"159","severity":2,"message":"162","line":10,"column":42,"nodeType":"145","messageId":"161","endLine":10,"endColumn":47},{"ruleId":"147","severity":1,"message":"163","line":12,"column":8,"nodeType":"149","endLine":12,"endColumn":10,"suggestions":"164"},{"ruleId":"147","severity":1,"message":"165","line":23,"column":8,"nodeType":"149","endLine":23,"endColumn":10,"suggestions":"166"},{"ruleId":"147","severity":1,"message":"165","line":30,"column":8,"nodeType":"149","endLine":30,"endColumn":65,"suggestions":"167"},{"ruleId":"143","severity":1,"message":"168","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":18},{"ruleId":"143","severity":1,"message":"169","line":4,"column":22,"nodeType":"145","messageId":"146","endLine":4,"endColumn":32},{"ruleId":"143","severity":1,"message":"170","line":5,"column":36,"nodeType":"145","messageId":"146","endLine":5,"endColumn":48},{"ruleId":"147","severity":1,"message":"165","line":18,"column":8,"nodeType":"149","endLine":18,"endColumn":10,"suggestions":"171"},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["174"],"'SHOP_ROUTE' is defined but never used.","'Button' is defined but never used.","'Container' is defined but never used.","'Alert' is defined but never used.","'AlertTitle' is defined but never used.","'Stack' is defined but never used.","'login' is defined but never used.","'isAdmin' is assigned a value but never used.","no-undef","'required' is not defined.","undef","'email' is not defined.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["175"],"React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["176"],["177"],"'jwt_decode' is defined but never used.","'createType' is defined but never used.","'fetchDevices' is defined but never used.",["178"],"no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"183","fix":"187"},"Update the dependencies array to be: [user]",{"range":"188","text":"189"},"Update the dependencies array to be: [id]",{"range":"190","text":"191"},"Update the dependencies array to be: [device]",{"range":"192","text":"193"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"194","text":"195"},{"range":"196","text":"193"},[735,737],"[user]",[465,467],"[id]",[897,899],"[device]",[1136,1193],"[device.page, device.selectedType, device.selectedBrand, device]",[764,766]]